steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/javavulnlab/github.com/saraiawolola/javavulnerablelab:$COMMIT_SHA', '.']
    
  # Step 2: Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/javavulnlab/github.com/saraiawolola/javavulnerablelab:$COMMIT_SHA']

  # Step 3: Snyk security scan (SCA)
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y gnupg && curl -sL https://snyk.io/get-cli | bash && \
        snyk auth $(gcloud secrets versions access latest --secret=snyk-api-token) && \
        snyk test
    secretEnv: ['SNYK-API-TOKEN']

  # Step 4: SonarQube code quality analysis (SAST)
  # - name: maven:3-jdk-11
  #   entrypoint: mvn
  #   args: ['verify', 'sonar:sonar','-Dsonar.host.url=https://sonarcloud.io','-Dsonar.organization=gcpvulnlab','-Dsonar.projectKey=gcpvulnproject','-Dsonar.login=$(gcloud secrets versions access latest --secret=sonarqube-token)']
  #   secretEnv: ['SONARQUBE-TOKEN']

  # Step 5: OWASP ZAP DAST scan
  # - name: 'owasp/zap2docker-stable'
  #   entrypoint: 'sh'
  #   args: [
  #     - '-c',
  #     - |
  #       zap.sh -daemon -port 8080 -config api.disablekey=true &
  #       ZAP_PID=$!
  #       sleep 30
  #       zap-cli --zap-url http://localhost --zap-port 8080 status -t 120
  #       zap-cli --zap-url http://localhost --zap-port 8080 open-url https://javavulnerablelab-vfwdrvs6yq-ew.a.run.app
  #       zap-cli --zap-url http://localhost --zap-port 8080 spider https://javavulnerablelab-vfwdrvs6yq-ew.a.run.app
  #       zap-cli --zap-url http://localhost --zap-port 8080 active-scan -r https://javavulnerablelab-vfwdrvs6yq-ew.a.run.app
  #       zap-cli --zap-url http://localhost --zap-port 8080 report -o zap_report.html -f html
  #       kill $ZAP_PID
  #   ]

  # Step 6: Upload ZAP report to Cloud Storage (Optional)
  # - name: 'gcr.io/cloud-builders/gsutil'
  #   args: ['cp', 'zap_report.html', 'gs://gcpvulnlab-reports/zap_report.html']

  # Step 7: Deploy the image to Google Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'javavulnerablelab',
      '--image', 'gcr.io/javavulnlab/github.com/saraiawolola/javavulnerablelab:$COMMIT_SHA',
      '--platform', 'managed',
      '--region', 'europe-west1', # Change region as necessary
      '--allow-unauthenticated'
    ]
availableSecrets:
  - versionName: projects/714945281101/secrets/snyk-api-token/versions/1
    env: 'SNYK-API-TOKEN'
  - versionName: projects/714945281101/secrets/sonarqube-token/versions/1
    env: 'SONARQUBE-TOKEN'
    Logging options
options:
  logging: CLOUD_LOGGING_ONLY